// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test SelectSearch component Class name as fn 1`] = `
<div
  className="class-base__container"
  id={null}
>
  <div
    className="class-base__value"
  >
    <input
      autoComplete="on"
      autoFocus={false}
      className="class-base__input"
      disabled={false}
      onBlur={[Function]}
      onChange={null}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      placeholder={null}
      readOnly={true}
      tabIndex="0"
      value="Helvetica"
    />
  </div>
</div>
`;

exports[`Test SelectSearch component Class name as string 1`] = `
<div
  className="custom-select"
  id={null}
>
  <div
    className="custom-select__value"
  >
    <input
      autoComplete="on"
      autoFocus={false}
      className="custom-select__input"
      disabled={false}
      onBlur={[Function]}
      onChange={null}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      placeholder={null}
      readOnly={true}
      tabIndex="0"
      value="Helvetica"
    />
  </div>
</div>
`;

exports[`Test SelectSearch component Custom renderers work 1`] = `
<ForwardRef
  options={
    Array [
      Object {
        "name": "Helvetica",
        "value": "helvetica",
      },
      Object {
        "items": Array [
          Object {
            "data-stack": "Roboto, sans-serif",
            "name": "Roboto",
            "value": "Roboto",
          },
        ],
        "name": "Sans serif",
        "type": "group",
      },
      Object {
        "items": Array [
          Object {
            "data-stack": "\\"Playfair Display\\", serif",
            "name": "Playfair Display",
            "value": "Playfair Display",
          },
        ],
        "name": "Serif",
        "type": "group",
      },
      Object {
        "items": Array [
          Object {
            "data-stack": "Monoton, cursive",
            "name": "Monoton",
            "value": "Monoton",
          },
          Object {
            "data-stack": "\\"Gloria Hallelujah\\", cursive",
            "name": "Gloria Hallelujah",
            "value": "Gloria Hallelujah",
          },
        ],
        "name": "Cursive",
        "type": "group",
      },
      Object {
        "items": Array [
          Object {
            "data-stack": "VT323, monospace",
            "name": "VT323",
            "value": "VT323",
          },
        ],
        "name": "Monospace",
        "type": "group",
      },
    ]
  }
  renderGroupHeader={[Function]}
  renderOption={[Function]}
  renderValue={[Function]}
>
  <div
    className="select-search"
    id={null}
  >
    <div
      className="select-search__value"
    >
      <input
        autoComplete="on"
        autoFocus={false}
        className="select-search__input"
        disabled={false}
        onBlur={[Function]}
        onChange={null}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        placeholder={null}
        readOnly={true}
        style={
          Object {
            "fontFamily": null,
          }
        }
        tabIndex="0"
        value="Helvetica"
      />
    </div>
  </div>
</ForwardRef>
`;

exports[`Test SelectSearch component Custom renderers work 2`] = `
<ForwardRef
  options={
    Array [
      Object {
        "name": "Helvetica",
        "value": "helvetica",
      },
      Object {
        "items": Array [
          Object {
            "data-stack": "Roboto, sans-serif",
            "name": "Roboto",
            "value": "Roboto",
          },
        ],
        "name": "Sans serif",
        "type": "group",
      },
      Object {
        "items": Array [
          Object {
            "data-stack": "\\"Playfair Display\\", serif",
            "name": "Playfair Display",
            "value": "Playfair Display",
          },
        ],
        "name": "Serif",
        "type": "group",
      },
      Object {
        "items": Array [
          Object {
            "data-stack": "Monoton, cursive",
            "name": "Monoton",
            "value": "Monoton",
          },
          Object {
            "data-stack": "\\"Gloria Hallelujah\\", cursive",
            "name": "Gloria Hallelujah",
            "value": "Gloria Hallelujah",
          },
        ],
        "name": "Cursive",
        "type": "group",
      },
      Object {
        "items": Array [
          Object {
            "data-stack": "VT323, monospace",
            "name": "VT323",
            "value": "VT323",
          },
        ],
        "name": "Monospace",
        "type": "group",
      },
    ]
  }
  renderGroupHeader={[Function]}
  renderOption={[Function]}
  renderValue={[Function]}
>
  <div
    className="select-search has-focus"
    id={null}
  >
    <div
      className="select-search__value"
    >
      <input
        autoComplete="on"
        autoFocus={false}
        className="select-search__input"
        disabled={false}
        onBlur={[Function]}
        onChange={null}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        placeholder={null}
        readOnly={true}
        style={
          Object {
            "fontFamily": null,
          }
        }
        tabIndex="0"
        value="Helvetica"
      />
    </div>
    <div
      className="select-search__select"
    >
      <ul
        className="select-search__options"
      >
        <Option
          _id="helvetica"
          cls={[Function]}
          highlighted={false}
          index={0}
          key="helvetica"
          name="Helvetica"
          optionProps={
            Object {
              "onBlur": [Function],
              "onKeyDown": [Function],
              "onKeyPress": [Function],
              "onMouseDown": [Function],
              "tabIndex": "-1",
            }
          }
          renderOption={[Function]}
          selected={true}
          value="helvetica"
        >
          <li
            className="select-search__row"
            data-index={0}
            data-value="helvetica"
            key="helvetica"
            role="menuitem"
          >
            <button
              className="select-search__option is-selected"
              disabled={false}
              onBlur={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              onMouseDown={[Function]}
              tabIndex="-1"
              type="button"
              value="helvetica"
            >
              <span
                style={
                  Object {
                    "fontFamily": undefined,
                  }
                }
              >
                Helvetica
              </span>
            </button>
          </li>
        </Option>
        <li
          className="select-search__row"
          key="sans-serif-1"
          role="none"
        >
          <div
            className="select-search__group"
          >
            <div
              className="select-search__group-header"
            >
              Type: Sans serif
            </div>
            <ul
              className="select-search__options"
            >
              <Option
                _id="Roboto"
                cls={[Function]}
                data-stack="Roboto, sans-serif"
                groupId="sans-serif-1"
                groupName="Sans serif"
                highlighted={false}
                index={1}
                key="Roboto"
                name="Roboto"
                optionProps={
                  Object {
                    "onBlur": [Function],
                    "onKeyDown": [Function],
                    "onKeyPress": [Function],
                    "onMouseDown": [Function],
                    "tabIndex": "-1",
                  }
                }
                renderOption={[Function]}
                selected={false}
                value="Roboto"
              >
                <li
                  className="select-search__row"
                  data-index={1}
                  data-value="Roboto"
                  key="Roboto"
                  role="menuitem"
                >
                  <button
                    className="select-search__option"
                    disabled={false}
                    onBlur={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onMouseDown={[Function]}
                    tabIndex="-1"
                    type="button"
                    value="Roboto"
                  >
                    <span
                      style={
                        Object {
                          "fontFamily": undefined,
                        }
                      }
                    >
                      Roboto
                    </span>
                  </button>
                </li>
              </Option>
            </ul>
          </div>
        </li>
        <li
          className="select-search__row"
          key="serif-2"
          role="none"
        >
          <div
            className="select-search__group"
          >
            <div
              className="select-search__group-header"
            >
              Type: Serif
            </div>
            <ul
              className="select-search__options"
            >
              <Option
                _id="Playfair Display"
                cls={[Function]}
                data-stack="\\"Playfair Display\\", serif"
                groupId="serif-2"
                groupName="Serif"
                highlighted={false}
                index={2}
                key="Playfair Display"
                name="Playfair Display"
                optionProps={
                  Object {
                    "onBlur": [Function],
                    "onKeyDown": [Function],
                    "onKeyPress": [Function],
                    "onMouseDown": [Function],
                    "tabIndex": "-1",
                  }
                }
                renderOption={[Function]}
                selected={false}
                value="Playfair Display"
              >
                <li
                  className="select-search__row"
                  data-index={2}
                  data-value="Playfair%20Display"
                  key="Playfair Display"
                  role="menuitem"
                >
                  <button
                    className="select-search__option"
                    disabled={false}
                    onBlur={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onMouseDown={[Function]}
                    tabIndex="-1"
                    type="button"
                    value="Playfair Display"
                  >
                    <span
                      style={
                        Object {
                          "fontFamily": undefined,
                        }
                      }
                    >
                      Playfair Display
                    </span>
                  </button>
                </li>
              </Option>
            </ul>
          </div>
        </li>
        <li
          className="select-search__row"
          key="cursive-3"
          role="none"
        >
          <div
            className="select-search__group"
          >
            <div
              className="select-search__group-header"
            >
              Type: Cursive
            </div>
            <ul
              className="select-search__options"
            >
              <Option
                _id="Monoton"
                cls={[Function]}
                data-stack="Monoton, cursive"
                groupId="cursive-3"
                groupName="Cursive"
                highlighted={false}
                index={3}
                key="Monoton"
                name="Monoton"
                optionProps={
                  Object {
                    "onBlur": [Function],
                    "onKeyDown": [Function],
                    "onKeyPress": [Function],
                    "onMouseDown": [Function],
                    "tabIndex": "-1",
                  }
                }
                renderOption={[Function]}
                selected={false}
                value="Monoton"
              >
                <li
                  className="select-search__row"
                  data-index={3}
                  data-value="Monoton"
                  key="Monoton"
                  role="menuitem"
                >
                  <button
                    className="select-search__option"
                    disabled={false}
                    onBlur={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onMouseDown={[Function]}
                    tabIndex="-1"
                    type="button"
                    value="Monoton"
                  >
                    <span
                      style={
                        Object {
                          "fontFamily": undefined,
                        }
                      }
                    >
                      Monoton
                    </span>
                  </button>
                </li>
              </Option>
              <Option
                _id="Gloria Hallelujah"
                cls={[Function]}
                data-stack="\\"Gloria Hallelujah\\", cursive"
                groupId="cursive-3"
                groupName="Cursive"
                highlighted={false}
                index={4}
                key="Gloria Hallelujah"
                name="Gloria Hallelujah"
                optionProps={
                  Object {
                    "onBlur": [Function],
                    "onKeyDown": [Function],
                    "onKeyPress": [Function],
                    "onMouseDown": [Function],
                    "tabIndex": "-1",
                  }
                }
                renderOption={[Function]}
                selected={false}
                value="Gloria Hallelujah"
              >
                <li
                  className="select-search__row"
                  data-index={4}
                  data-value="Gloria%20Hallelujah"
                  key="Gloria Hallelujah"
                  role="menuitem"
                >
                  <button
                    className="select-search__option"
                    disabled={false}
                    onBlur={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onMouseDown={[Function]}
                    tabIndex="-1"
                    type="button"
                    value="Gloria Hallelujah"
                  >
                    <span
                      style={
                        Object {
                          "fontFamily": undefined,
                        }
                      }
                    >
                      Gloria Hallelujah
                    </span>
                  </button>
                </li>
              </Option>
            </ul>
          </div>
        </li>
        <li
          className="select-search__row"
          key="monospace-4"
          role="none"
        >
          <div
            className="select-search__group"
          >
            <div
              className="select-search__group-header"
            >
              Type: Monospace
            </div>
            <ul
              className="select-search__options"
            >
              <Option
                _id="VT323"
                cls={[Function]}
                data-stack="VT323, monospace"
                groupId="monospace-4"
                groupName="Monospace"
                highlighted={false}
                index={5}
                key="VT323"
                name="VT323"
                optionProps={
                  Object {
                    "onBlur": [Function],
                    "onKeyDown": [Function],
                    "onKeyPress": [Function],
                    "onMouseDown": [Function],
                    "tabIndex": "-1",
                  }
                }
                renderOption={[Function]}
                selected={false}
                value="VT323"
              >
                <li
                  className="select-search__row"
                  data-index={5}
                  data-value="VT323"
                  key="VT323"
                  role="menuitem"
                >
                  <button
                    className="select-search__option"
                    disabled={false}
                    onBlur={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onMouseDown={[Function]}
                    tabIndex="-1"
                    type="button"
                    value="VT323"
                  >
                    <span
                      style={
                        Object {
                          "fontFamily": undefined,
                        }
                      }
                    >
                      VT323
                    </span>
                  </button>
                </li>
              </Option>
            </ul>
          </div>
        </li>
      </ul>
    </div>
  </div>
</ForwardRef>
`;

exports[`Test SelectSearch component Custom renderers work with search 1`] = `
<ForwardRef
  options={
    Array [
      Object {
        "name": "Helvetica",
        "value": "helvetica",
      },
      Object {
        "items": Array [
          Object {
            "data-stack": "Roboto, sans-serif",
            "name": "Roboto",
            "value": "Roboto",
          },
        ],
        "name": "Sans serif",
        "type": "group",
      },
      Object {
        "items": Array [
          Object {
            "data-stack": "\\"Playfair Display\\", serif",
            "name": "Playfair Display",
            "value": "Playfair Display",
          },
        ],
        "name": "Serif",
        "type": "group",
      },
      Object {
        "items": Array [
          Object {
            "data-stack": "Monoton, cursive",
            "name": "Monoton",
            "value": "Monoton",
          },
          Object {
            "data-stack": "\\"Gloria Hallelujah\\", cursive",
            "name": "Gloria Hallelujah",
            "value": "Gloria Hallelujah",
          },
        ],
        "name": "Cursive",
        "type": "group",
      },
      Object {
        "items": Array [
          Object {
            "data-stack": "VT323, monospace",
            "name": "VT323",
            "value": "VT323",
          },
        ],
        "name": "Monospace",
        "type": "group",
      },
    ]
  }
  renderGroupHeader={[Function]}
  renderOption={[Function]}
  renderValue={[Function]}
  search={true}
>
  <div
    className="select-search"
    id={null}
  >
    <div
      className="select-search__value"
    >
      <input
        autoComplete="on"
        autoFocus={false}
        className="select-search__input"
        disabled={false}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        placeholder={null}
        readOnly={false}
        style={
          Object {
            "fontFamily": null,
          }
        }
        tabIndex="0"
        value="Helvetica"
      />
    </div>
  </div>
</ForwardRef>
`;

exports[`Test SelectSearch component Custom renderers work with search 2`] = `
<ForwardRef
  options={
    Array [
      Object {
        "name": "Helvetica",
        "value": "helvetica",
      },
      Object {
        "items": Array [
          Object {
            "data-stack": "Roboto, sans-serif",
            "name": "Roboto",
            "value": "Roboto",
          },
        ],
        "name": "Sans serif",
        "type": "group",
      },
      Object {
        "items": Array [
          Object {
            "data-stack": "\\"Playfair Display\\", serif",
            "name": "Playfair Display",
            "value": "Playfair Display",
          },
        ],
        "name": "Serif",
        "type": "group",
      },
      Object {
        "items": Array [
          Object {
            "data-stack": "Monoton, cursive",
            "name": "Monoton",
            "value": "Monoton",
          },
          Object {
            "data-stack": "\\"Gloria Hallelujah\\", cursive",
            "name": "Gloria Hallelujah",
            "value": "Gloria Hallelujah",
          },
        ],
        "name": "Cursive",
        "type": "group",
      },
      Object {
        "items": Array [
          Object {
            "data-stack": "VT323, monospace",
            "name": "VT323",
            "value": "VT323",
          },
        ],
        "name": "Monospace",
        "type": "group",
      },
    ]
  }
  renderGroupHeader={[Function]}
  renderOption={[Function]}
  renderValue={[Function]}
  search={true}
>
  <div
    className="select-search has-focus"
    id={null}
  >
    <div
      className="select-search__value"
    >
      <input
        autoComplete="on"
        autoFocus={false}
        className="select-search__input"
        disabled={false}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        placeholder={null}
        readOnly={false}
        style={
          Object {
            "fontFamily": null,
          }
        }
        tabIndex="0"
        value="Helvetica"
      />
    </div>
    <div
      className="select-search__select"
    >
      <ul
        className="select-search__options"
      >
        <Option
          _id="helvetica"
          cls={[Function]}
          highlighted={false}
          index={0}
          key="helvetica"
          name="Helvetica"
          optionProps={
            Object {
              "onBlur": [Function],
              "onKeyDown": [Function],
              "onKeyPress": [Function],
              "onMouseDown": [Function],
              "tabIndex": "-1",
            }
          }
          renderOption={[Function]}
          selected={true}
          value="helvetica"
        >
          <li
            className="select-search__row"
            data-index={0}
            data-value="helvetica"
            key="helvetica"
            role="menuitem"
          >
            <button
              className="select-search__option is-selected"
              disabled={false}
              onBlur={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              onMouseDown={[Function]}
              tabIndex="-1"
              type="button"
              value="helvetica"
            >
              <span
                style={
                  Object {
                    "fontFamily": undefined,
                  }
                }
              >
                Helvetica
              </span>
            </button>
          </li>
        </Option>
        <li
          className="select-search__row"
          key="sans-serif-1"
          role="none"
        >
          <div
            className="select-search__group"
          >
            <div
              className="select-search__group-header"
            >
              Type: Sans serif
            </div>
            <ul
              className="select-search__options"
            >
              <Option
                _id="Roboto"
                cls={[Function]}
                data-stack="Roboto, sans-serif"
                groupId="sans-serif-1"
                groupName="Sans serif"
                highlighted={false}
                index={1}
                key="Roboto"
                name="Roboto"
                optionProps={
                  Object {
                    "onBlur": [Function],
                    "onKeyDown": [Function],
                    "onKeyPress": [Function],
                    "onMouseDown": [Function],
                    "tabIndex": "-1",
                  }
                }
                renderOption={[Function]}
                selected={false}
                value="Roboto"
              >
                <li
                  className="select-search__row"
                  data-index={1}
                  data-value="Roboto"
                  key="Roboto"
                  role="menuitem"
                >
                  <button
                    className="select-search__option"
                    disabled={false}
                    onBlur={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onMouseDown={[Function]}
                    tabIndex="-1"
                    type="button"
                    value="Roboto"
                  >
                    <span
                      style={
                        Object {
                          "fontFamily": undefined,
                        }
                      }
                    >
                      Roboto
                    </span>
                  </button>
                </li>
              </Option>
            </ul>
          </div>
        </li>
        <li
          className="select-search__row"
          key="serif-2"
          role="none"
        >
          <div
            className="select-search__group"
          >
            <div
              className="select-search__group-header"
            >
              Type: Serif
            </div>
            <ul
              className="select-search__options"
            >
              <Option
                _id="Playfair Display"
                cls={[Function]}
                data-stack="\\"Playfair Display\\", serif"
                groupId="serif-2"
                groupName="Serif"
                highlighted={false}
                index={2}
                key="Playfair Display"
                name="Playfair Display"
                optionProps={
                  Object {
                    "onBlur": [Function],
                    "onKeyDown": [Function],
                    "onKeyPress": [Function],
                    "onMouseDown": [Function],
                    "tabIndex": "-1",
                  }
                }
                renderOption={[Function]}
                selected={false}
                value="Playfair Display"
              >
                <li
                  className="select-search__row"
                  data-index={2}
                  data-value="Playfair%20Display"
                  key="Playfair Display"
                  role="menuitem"
                >
                  <button
                    className="select-search__option"
                    disabled={false}
                    onBlur={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onMouseDown={[Function]}
                    tabIndex="-1"
                    type="button"
                    value="Playfair Display"
                  >
                    <span
                      style={
                        Object {
                          "fontFamily": undefined,
                        }
                      }
                    >
                      Playfair Display
                    </span>
                  </button>
                </li>
              </Option>
            </ul>
          </div>
        </li>
        <li
          className="select-search__row"
          key="cursive-3"
          role="none"
        >
          <div
            className="select-search__group"
          >
            <div
              className="select-search__group-header"
            >
              Type: Cursive
            </div>
            <ul
              className="select-search__options"
            >
              <Option
                _id="Monoton"
                cls={[Function]}
                data-stack="Monoton, cursive"
                groupId="cursive-3"
                groupName="Cursive"
                highlighted={false}
                index={3}
                key="Monoton"
                name="Monoton"
                optionProps={
                  Object {
                    "onBlur": [Function],
                    "onKeyDown": [Function],
                    "onKeyPress": [Function],
                    "onMouseDown": [Function],
                    "tabIndex": "-1",
                  }
                }
                renderOption={[Function]}
                selected={false}
                value="Monoton"
              >
                <li
                  className="select-search__row"
                  data-index={3}
                  data-value="Monoton"
                  key="Monoton"
                  role="menuitem"
                >
                  <button
                    className="select-search__option"
                    disabled={false}
                    onBlur={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onMouseDown={[Function]}
                    tabIndex="-1"
                    type="button"
                    value="Monoton"
                  >
                    <span
                      style={
                        Object {
                          "fontFamily": undefined,
                        }
                      }
                    >
                      Monoton
                    </span>
                  </button>
                </li>
              </Option>
              <Option
                _id="Gloria Hallelujah"
                cls={[Function]}
                data-stack="\\"Gloria Hallelujah\\", cursive"
                groupId="cursive-3"
                groupName="Cursive"
                highlighted={false}
                index={4}
                key="Gloria Hallelujah"
                name="Gloria Hallelujah"
                optionProps={
                  Object {
                    "onBlur": [Function],
                    "onKeyDown": [Function],
                    "onKeyPress": [Function],
                    "onMouseDown": [Function],
                    "tabIndex": "-1",
                  }
                }
                renderOption={[Function]}
                selected={false}
                value="Gloria Hallelujah"
              >
                <li
                  className="select-search__row"
                  data-index={4}
                  data-value="Gloria%20Hallelujah"
                  key="Gloria Hallelujah"
                  role="menuitem"
                >
                  <button
                    className="select-search__option"
                    disabled={false}
                    onBlur={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onMouseDown={[Function]}
                    tabIndex="-1"
                    type="button"
                    value="Gloria Hallelujah"
                  >
                    <span
                      style={
                        Object {
                          "fontFamily": undefined,
                        }
                      }
                    >
                      Gloria Hallelujah
                    </span>
                  </button>
                </li>
              </Option>
            </ul>
          </div>
        </li>
        <li
          className="select-search__row"
          key="monospace-4"
          role="none"
        >
          <div
            className="select-search__group"
          >
            <div
              className="select-search__group-header"
            >
              Type: Monospace
            </div>
            <ul
              className="select-search__options"
            >
              <Option
                _id="VT323"
                cls={[Function]}
                data-stack="VT323, monospace"
                groupId="monospace-4"
                groupName="Monospace"
                highlighted={false}
                index={5}
                key="VT323"
                name="VT323"
                optionProps={
                  Object {
                    "onBlur": [Function],
                    "onKeyDown": [Function],
                    "onKeyPress": [Function],
                    "onMouseDown": [Function],
                    "tabIndex": "-1",
                  }
                }
                renderOption={[Function]}
                selected={false}
                value="VT323"
              >
                <li
                  className="select-search__row"
                  data-index={5}
                  data-value="VT323"
                  key="VT323"
                  role="menuitem"
                >
                  <button
                    className="select-search__option"
                    disabled={false}
                    onBlur={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onMouseDown={[Function]}
                    tabIndex="-1"
                    type="button"
                    value="VT323"
                  >
                    <span
                      style={
                        Object {
                          "fontFamily": undefined,
                        }
                      }
                    >
                      VT323
                    </span>
                  </button>
                </li>
              </Option>
            </ul>
          </div>
        </li>
      </ul>
    </div>
  </div>
</ForwardRef>
`;

exports[`Test SelectSearch component Focus displays options 1`] = `
<ForwardRef
  options={
    Array [
      Object {
        "name": "Foo",
        "value": "foo",
      },
      Object {
        "name": "Bar",
        "value": "bar",
      },
    ]
  }
>
  <div
    className="select-search"
    id={null}
  >
    <div
      className="select-search__value"
    >
      <input
        autoComplete="on"
        autoFocus={false}
        className="select-search__input"
        disabled={false}
        onBlur={[Function]}
        onChange={null}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        placeholder={null}
        readOnly={true}
        tabIndex="0"
        value="Foo"
      />
    </div>
  </div>
</ForwardRef>
`;

exports[`Test SelectSearch component Focus displays options 2`] = `
<ForwardRef
  options={
    Array [
      Object {
        "name": "Foo",
        "value": "foo",
      },
      Object {
        "name": "Bar",
        "value": "bar",
      },
    ]
  }
>
  <div
    className="select-search has-focus"
    id={null}
  >
    <div
      className="select-search__value"
    >
      <input
        autoComplete="on"
        autoFocus={false}
        className="select-search__input"
        disabled={false}
        onBlur={[Function]}
        onChange={null}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        placeholder={null}
        readOnly={true}
        tabIndex="0"
        value="Foo"
      />
    </div>
    <div
      className="select-search__select"
    >
      <ul
        className="select-search__options"
      >
        <Option
          _id="foo"
          cls={[Function]}
          highlighted={false}
          index={0}
          key="foo"
          name="Foo"
          optionProps={
            Object {
              "onBlur": [Function],
              "onKeyDown": [Function],
              "onKeyPress": [Function],
              "onMouseDown": [Function],
              "tabIndex": "-1",
            }
          }
          renderOption={[Function]}
          selected={true}
          value="foo"
        >
          <li
            className="select-search__row"
            data-index={0}
            data-value="foo"
            key="foo"
            role="menuitem"
          >
            <button
              className="select-search__option is-selected"
              disabled={false}
              onBlur={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              onMouseDown={[Function]}
              tabIndex="-1"
              value="foo"
            >
              Foo
            </button>
          </li>
        </Option>
        <Option
          _id="bar"
          cls={[Function]}
          highlighted={false}
          index={1}
          key="bar"
          name="Bar"
          optionProps={
            Object {
              "onBlur": [Function],
              "onKeyDown": [Function],
              "onKeyPress": [Function],
              "onMouseDown": [Function],
              "tabIndex": "-1",
            }
          }
          renderOption={[Function]}
          selected={false}
          value="bar"
        >
          <li
            className="select-search__row"
            data-index={1}
            data-value="bar"
            key="bar"
            role="menuitem"
          >
            <button
              className="select-search__option"
              disabled={false}
              onBlur={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              onMouseDown={[Function]}
              tabIndex="-1"
              value="bar"
            >
              Bar
            </button>
          </li>
        </Option>
      </ul>
    </div>
  </div>
</ForwardRef>
`;

exports[`Test SelectSearch component Renders groups 1`] = `
<ForwardRef
  options={
    Array [
      Object {
        "name": "Helvetica",
        "value": "helvetica",
      },
      Object {
        "items": Array [
          Object {
            "data-stack": "Roboto, sans-serif",
            "name": "Roboto",
            "value": "Roboto",
          },
        ],
        "name": "Sans serif",
        "type": "group",
      },
      Object {
        "items": Array [
          Object {
            "data-stack": "\\"Playfair Display\\", serif",
            "name": "Playfair Display",
            "value": "Playfair Display",
          },
        ],
        "name": "Serif",
        "type": "group",
      },
      Object {
        "items": Array [
          Object {
            "data-stack": "Monoton, cursive",
            "name": "Monoton",
            "value": "Monoton",
          },
          Object {
            "data-stack": "\\"Gloria Hallelujah\\", cursive",
            "name": "Gloria Hallelujah",
            "value": "Gloria Hallelujah",
          },
        ],
        "name": "Cursive",
        "type": "group",
      },
      Object {
        "items": Array [
          Object {
            "data-stack": "VT323, monospace",
            "name": "VT323",
            "value": "VT323",
          },
        ],
        "name": "Monospace",
        "type": "group",
      },
    ]
  }
  renderOption={[Function]}
  renderValue={[Function]}
>
  <div
    className="select-search"
    id={null}
  >
    <div
      className="select-search__value"
    >
      <input
        autoComplete="on"
        autoFocus={false}
        className="select-search__input"
        disabled={false}
        onBlur={[Function]}
        onChange={null}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        placeholder={null}
        readOnly={true}
        style={
          Object {
            "fontFamily": null,
          }
        }
        tabIndex="0"
        value="Helvetica"
      />
    </div>
  </div>
</ForwardRef>
`;

exports[`Test SelectSearch component Renders groups 2`] = `
<ForwardRef
  options={
    Array [
      Object {
        "name": "Helvetica",
        "value": "helvetica",
      },
      Object {
        "items": Array [
          Object {
            "data-stack": "Roboto, sans-serif",
            "name": "Roboto",
            "value": "Roboto",
          },
        ],
        "name": "Sans serif",
        "type": "group",
      },
      Object {
        "items": Array [
          Object {
            "data-stack": "\\"Playfair Display\\", serif",
            "name": "Playfair Display",
            "value": "Playfair Display",
          },
        ],
        "name": "Serif",
        "type": "group",
      },
      Object {
        "items": Array [
          Object {
            "data-stack": "Monoton, cursive",
            "name": "Monoton",
            "value": "Monoton",
          },
          Object {
            "data-stack": "\\"Gloria Hallelujah\\", cursive",
            "name": "Gloria Hallelujah",
            "value": "Gloria Hallelujah",
          },
        ],
        "name": "Cursive",
        "type": "group",
      },
      Object {
        "items": Array [
          Object {
            "data-stack": "VT323, monospace",
            "name": "VT323",
            "value": "VT323",
          },
        ],
        "name": "Monospace",
        "type": "group",
      },
    ]
  }
  renderOption={[Function]}
  renderValue={[Function]}
>
  <div
    className="select-search has-focus"
    id={null}
  >
    <div
      className="select-search__value"
    >
      <input
        autoComplete="on"
        autoFocus={false}
        className="select-search__input"
        disabled={false}
        onBlur={[Function]}
        onChange={null}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        placeholder={null}
        readOnly={true}
        style={
          Object {
            "fontFamily": null,
          }
        }
        tabIndex="0"
        value="Helvetica"
      />
    </div>
    <div
      className="select-search__select"
    >
      <ul
        className="select-search__options"
      >
        <Option
          _id="helvetica"
          cls={[Function]}
          highlighted={false}
          index={0}
          key="helvetica"
          name="Helvetica"
          optionProps={
            Object {
              "onBlur": [Function],
              "onKeyDown": [Function],
              "onKeyPress": [Function],
              "onMouseDown": [Function],
              "tabIndex": "-1",
            }
          }
          renderOption={[Function]}
          selected={true}
          value="helvetica"
        >
          <li
            className="select-search__row"
            data-index={0}
            data-value="helvetica"
            key="helvetica"
            role="menuitem"
          >
            <button
              className="select-search__option is-selected"
              disabled={false}
              onBlur={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              onMouseDown={[Function]}
              tabIndex="-1"
              type="button"
              value="helvetica"
            >
              <span
                style={
                  Object {
                    "fontFamily": undefined,
                  }
                }
              >
                Helvetica
              </span>
            </button>
          </li>
        </Option>
        <li
          className="select-search__row"
          key="sans-serif-1"
          role="none"
        >
          <div
            className="select-search__group"
          >
            <div
              className="select-search__group-header"
            >
              Sans serif
            </div>
            <ul
              className="select-search__options"
            >
              <Option
                _id="Roboto"
                cls={[Function]}
                data-stack="Roboto, sans-serif"
                groupId="sans-serif-1"
                groupName="Sans serif"
                highlighted={false}
                index={1}
                key="Roboto"
                name="Roboto"
                optionProps={
                  Object {
                    "onBlur": [Function],
                    "onKeyDown": [Function],
                    "onKeyPress": [Function],
                    "onMouseDown": [Function],
                    "tabIndex": "-1",
                  }
                }
                renderOption={[Function]}
                selected={false}
                value="Roboto"
              >
                <li
                  className="select-search__row"
                  data-index={1}
                  data-value="Roboto"
                  key="Roboto"
                  role="menuitem"
                >
                  <button
                    className="select-search__option"
                    disabled={false}
                    onBlur={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onMouseDown={[Function]}
                    tabIndex="-1"
                    type="button"
                    value="Roboto"
                  >
                    <span
                      style={
                        Object {
                          "fontFamily": undefined,
                        }
                      }
                    >
                      Roboto
                    </span>
                  </button>
                </li>
              </Option>
            </ul>
          </div>
        </li>
        <li
          className="select-search__row"
          key="serif-2"
          role="none"
        >
          <div
            className="select-search__group"
          >
            <div
              className="select-search__group-header"
            >
              Serif
            </div>
            <ul
              className="select-search__options"
            >
              <Option
                _id="Playfair Display"
                cls={[Function]}
                data-stack="\\"Playfair Display\\", serif"
                groupId="serif-2"
                groupName="Serif"
                highlighted={false}
                index={2}
                key="Playfair Display"
                name="Playfair Display"
                optionProps={
                  Object {
                    "onBlur": [Function],
                    "onKeyDown": [Function],
                    "onKeyPress": [Function],
                    "onMouseDown": [Function],
                    "tabIndex": "-1",
                  }
                }
                renderOption={[Function]}
                selected={false}
                value="Playfair Display"
              >
                <li
                  className="select-search__row"
                  data-index={2}
                  data-value="Playfair%20Display"
                  key="Playfair Display"
                  role="menuitem"
                >
                  <button
                    className="select-search__option"
                    disabled={false}
                    onBlur={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onMouseDown={[Function]}
                    tabIndex="-1"
                    type="button"
                    value="Playfair Display"
                  >
                    <span
                      style={
                        Object {
                          "fontFamily": undefined,
                        }
                      }
                    >
                      Playfair Display
                    </span>
                  </button>
                </li>
              </Option>
            </ul>
          </div>
        </li>
        <li
          className="select-search__row"
          key="cursive-3"
          role="none"
        >
          <div
            className="select-search__group"
          >
            <div
              className="select-search__group-header"
            >
              Cursive
            </div>
            <ul
              className="select-search__options"
            >
              <Option
                _id="Monoton"
                cls={[Function]}
                data-stack="Monoton, cursive"
                groupId="cursive-3"
                groupName="Cursive"
                highlighted={false}
                index={3}
                key="Monoton"
                name="Monoton"
                optionProps={
                  Object {
                    "onBlur": [Function],
                    "onKeyDown": [Function],
                    "onKeyPress": [Function],
                    "onMouseDown": [Function],
                    "tabIndex": "-1",
                  }
                }
                renderOption={[Function]}
                selected={false}
                value="Monoton"
              >
                <li
                  className="select-search__row"
                  data-index={3}
                  data-value="Monoton"
                  key="Monoton"
                  role="menuitem"
                >
                  <button
                    className="select-search__option"
                    disabled={false}
                    onBlur={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onMouseDown={[Function]}
                    tabIndex="-1"
                    type="button"
                    value="Monoton"
                  >
                    <span
                      style={
                        Object {
                          "fontFamily": undefined,
                        }
                      }
                    >
                      Monoton
                    </span>
                  </button>
                </li>
              </Option>
              <Option
                _id="Gloria Hallelujah"
                cls={[Function]}
                data-stack="\\"Gloria Hallelujah\\", cursive"
                groupId="cursive-3"
                groupName="Cursive"
                highlighted={false}
                index={4}
                key="Gloria Hallelujah"
                name="Gloria Hallelujah"
                optionProps={
                  Object {
                    "onBlur": [Function],
                    "onKeyDown": [Function],
                    "onKeyPress": [Function],
                    "onMouseDown": [Function],
                    "tabIndex": "-1",
                  }
                }
                renderOption={[Function]}
                selected={false}
                value="Gloria Hallelujah"
              >
                <li
                  className="select-search__row"
                  data-index={4}
                  data-value="Gloria%20Hallelujah"
                  key="Gloria Hallelujah"
                  role="menuitem"
                >
                  <button
                    className="select-search__option"
                    disabled={false}
                    onBlur={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onMouseDown={[Function]}
                    tabIndex="-1"
                    type="button"
                    value="Gloria Hallelujah"
                  >
                    <span
                      style={
                        Object {
                          "fontFamily": undefined,
                        }
                      }
                    >
                      Gloria Hallelujah
                    </span>
                  </button>
                </li>
              </Option>
            </ul>
          </div>
        </li>
        <li
          className="select-search__row"
          key="monospace-4"
          role="none"
        >
          <div
            className="select-search__group"
          >
            <div
              className="select-search__group-header"
            >
              Monospace
            </div>
            <ul
              className="select-search__options"
            >
              <Option
                _id="VT323"
                cls={[Function]}
                data-stack="VT323, monospace"
                groupId="monospace-4"
                groupName="Monospace"
                highlighted={false}
                index={5}
                key="VT323"
                name="VT323"
                optionProps={
                  Object {
                    "onBlur": [Function],
                    "onKeyDown": [Function],
                    "onKeyPress": [Function],
                    "onMouseDown": [Function],
                    "tabIndex": "-1",
                  }
                }
                renderOption={[Function]}
                selected={false}
                value="VT323"
              >
                <li
                  className="select-search__row"
                  data-index={5}
                  data-value="VT323"
                  key="VT323"
                  role="menuitem"
                >
                  <button
                    className="select-search__option"
                    disabled={false}
                    onBlur={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onMouseDown={[Function]}
                    tabIndex="-1"
                    type="button"
                    value="VT323"
                  >
                    <span
                      style={
                        Object {
                          "fontFamily": undefined,
                        }
                      }
                    >
                      VT323
                    </span>
                  </button>
                </li>
              </Option>
            </ul>
          </div>
        </li>
      </ul>
    </div>
  </div>
</ForwardRef>
`;

exports[`Test SelectSearch component Renders with default props 1`] = `
<div
  className="select-search"
  id={null}
>
  <div
    className="select-search__value"
  >
    <input
      autoComplete="on"
      autoFocus={false}
      className="select-search__input"
      disabled={false}
      onBlur={[Function]}
      onChange={null}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      placeholder={null}
      readOnly={true}
      tabIndex="0"
      value="Foo"
    />
  </div>
</div>
`;

exports[`Test SelectSearch component Renders with disabled 1`] = `
<div
  className="select-search is-disabled"
  id={null}
>
  <div
    className="select-search__value"
  >
    <input
      autoComplete="on"
      autoFocus={false}
      className="select-search__input"
      disabled={true}
      onBlur={[Function]}
      onChange={null}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      placeholder={null}
      readOnly={true}
      tabIndex="0"
      value="Foo"
    />
  </div>
</div>
`;

exports[`Test SelectSearch component Renders with empty message renderer 1`] = `
<div
  className="select-search"
  id={null}
>
  <div
    className="select-search__value"
  >
    <input
      autoComplete="on"
      autoFocus={false}
      className="select-search__input"
      disabled={false}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      placeholder={null}
      readOnly={false}
      tabIndex="0"
      value=""
    />
  </div>
  <div
    className="select-search__select"
  >
    <ul
      className="select-search__options"
    >
      <div>
        Not found
      </div>
    </ul>
  </div>
</div>
`;

exports[`Test SelectSearch component Renders with empty message string 1`] = `
<div
  className="select-search"
  id={null}
>
  <div
    className="select-search__value"
  >
    <input
      autoComplete="on"
      autoFocus={false}
      className="select-search__input"
      disabled={false}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      placeholder={null}
      readOnly={false}
      tabIndex="0"
      value=""
    />
  </div>
  <div
    className="select-search__select"
  >
    <ul
      className="select-search__options"
    >
      <li>
        Not found
      </li>
    </ul>
  </div>
</div>
`;

exports[`Test SelectSearch component Renders with multiple 1`] = `
<div
  className="select-search"
  id={null}
>
  <div
    className="select-search__select"
  >
    <ul
      className="select-search__options"
    >
      <li
        className="select-search__row"
        data-index={0}
        data-value="foo"
        role="menuitem"
      >
        <button
          className="select-search__option"
          disabled={false}
          onBlur={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          tabIndex="-1"
          value="foo"
        >
          Foo
        </button>
      </li>
      <li
        className="select-search__row"
        data-index={1}
        data-value="bar"
        role="menuitem"
      >
        <button
          className="select-search__option"
          disabled={false}
          onBlur={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          tabIndex="-1"
          value="bar"
        >
          Bar
        </button>
      </li>
    </ul>
  </div>
</div>
`;

exports[`Test SelectSearch component Renders with search 1`] = `
<div
  className="select-search"
  id={null}
>
  <div
    className="select-search__value"
  >
    <input
      autoComplete="on"
      autoFocus={false}
      className="select-search__input"
      disabled={false}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      placeholder={null}
      readOnly={false}
      tabIndex="0"
      value="Foo"
    />
  </div>
</div>
`;

exports[`Test SelectSearch component Renders with search and multiple 1`] = `
<div
  className="select-search"
  id={null}
>
  <div
    className="select-search__value"
  >
    <input
      autoComplete="on"
      autoFocus={false}
      className="select-search__input"
      disabled={false}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      placeholder={null}
      readOnly={false}
      tabIndex="0"
      value=""
    />
  </div>
  <div
    className="select-search__select"
  >
    <ul
      className="select-search__options"
    >
      <li
        className="select-search__row"
        data-index={0}
        data-value="foo"
        role="menuitem"
      >
        <button
          className="select-search__option"
          disabled={false}
          onBlur={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          tabIndex="-1"
          value="foo"
        >
          Foo
        </button>
      </li>
      <li
        className="select-search__row"
        data-index={1}
        data-value="bar"
        role="menuitem"
      >
        <button
          className="select-search__option"
          disabled={false}
          onBlur={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseDown={[Function]}
          tabIndex="-1"
          value="bar"
        >
          Bar
        </button>
      </li>
    </ul>
  </div>
</div>
`;

exports[`Test SelectSearch component Renders with search and placeholder 1`] = `
<div
  className="select-search"
  id={null}
>
  <div
    className="select-search__value"
  >
    <input
      autoComplete="on"
      autoFocus={false}
      className="select-search__input"
      disabled={false}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      placeholder="Search..."
      readOnly={false}
      tabIndex="0"
      value=""
    />
  </div>
</div>
`;

exports[`Test SelectSearch component Value change works without onChange handler 1`] = `
<ForwardRef
  options={
    Array [
      Object {
        "name": "Foo",
        "value": "foo",
      },
      Object {
        "name": "Bar",
        "value": "bar",
      },
    ]
  }
>
  <div
    className="select-search"
    id={null}
  >
    <div
      className="select-search__value"
    >
      <input
        autoComplete="on"
        autoFocus={false}
        className="select-search__input"
        disabled={false}
        onBlur={[Function]}
        onChange={null}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        placeholder={null}
        readOnly={true}
        tabIndex="0"
        value="Foo"
      />
    </div>
  </div>
</ForwardRef>
`;

exports[`Test SelectSearch component Value change works without onChange handler 2`] = `
<ForwardRef
  options={
    Array [
      Object {
        "name": "Foo",
        "value": "foo",
      },
      Object {
        "name": "Bar",
        "value": "bar",
      },
    ]
  }
>
  <div
    className="select-search has-focus"
    id={null}
  >
    <div
      className="select-search__value"
    >
      <input
        autoComplete="on"
        autoFocus={false}
        className="select-search__input"
        disabled={false}
        onBlur={[Function]}
        onChange={null}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        placeholder={null}
        readOnly={true}
        tabIndex="0"
        value="Foo"
      />
    </div>
    <div
      className="select-search__select"
    >
      <ul
        className="select-search__options"
      >
        <Option
          _id="foo"
          cls={[Function]}
          highlighted={false}
          index={0}
          key="foo"
          name="Foo"
          optionProps={
            Object {
              "onBlur": [Function],
              "onKeyDown": [Function],
              "onKeyPress": [Function],
              "onMouseDown": [Function],
              "tabIndex": "-1",
            }
          }
          renderOption={[Function]}
          selected={true}
          value="foo"
        >
          <li
            className="select-search__row"
            data-index={0}
            data-value="foo"
            key="foo"
            role="menuitem"
          >
            <button
              className="select-search__option is-selected"
              disabled={false}
              onBlur={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              onMouseDown={[Function]}
              tabIndex="-1"
              value="foo"
            >
              Foo
            </button>
          </li>
        </Option>
        <Option
          _id="bar"
          cls={[Function]}
          highlighted={false}
          index={1}
          key="bar"
          name="Bar"
          optionProps={
            Object {
              "onBlur": [Function],
              "onKeyDown": [Function],
              "onKeyPress": [Function],
              "onMouseDown": [Function],
              "tabIndex": "-1",
            }
          }
          renderOption={[Function]}
          selected={false}
          value="bar"
        >
          <li
            className="select-search__row"
            data-index={1}
            data-value="bar"
            key="bar"
            role="menuitem"
          >
            <button
              className="select-search__option"
              disabled={false}
              onBlur={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              onMouseDown={[Function]}
              tabIndex="-1"
              value="bar"
            >
              Bar
            </button>
          </li>
        </Option>
      </ul>
    </div>
  </div>
</ForwardRef>
`;
